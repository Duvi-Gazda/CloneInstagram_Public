[{"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/index.tsx":"1","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/App.tsx":"2","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/RouterApp.tsx":"3","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Hey/index.tsx":"4","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/404/index.tsx":"5","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Home/index.tsx":"6","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Login/index.tsx":"7","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Posts/index.tsx":"8","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Profiles/index.tsx":"9","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/SignUp/index.tsx":"10","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/API_SETTINGS.ts":"11","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/API.ts":"12","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/helpers.ts":"13","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/store/atom.ts":"14","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/AuthMiddleware.tsx":"15","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Hearth.tsx":"16","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/CommentPost.tsx":"17","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Send.tsx":"18","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Bookmark.tsx":"19","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Comment.tsx":"20","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/store/HearthIcon/hearthicon.atom.ts":"21","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/store/Post/Post.atom.ts":"22","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/layout/index.tsx":"23","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Modal/index.tsx":"24","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Avatar/index.tsx":"25","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Spinner/index.tsx":"26","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Post/index.tsx":"27","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Logo/index.tsx":"28","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/CartHeader/index.tsx":"29","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/CartPost/index.tsx":"30","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Home.tsx":"31","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Explore.tsx":"32","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/Spinner.tsx":"33"},{"size":220,"mtime":1618589766739,"results":"34","hashOfConfig":"35"},{"size":234,"mtime":1618589766739,"results":"36","hashOfConfig":"35"},{"size":1033,"mtime":1618589766739,"results":"37","hashOfConfig":"35"},{"size":324,"mtime":1618589766739,"results":"38","hashOfConfig":"35"},{"size":337,"mtime":1618589766739,"results":"39","hashOfConfig":"35"},{"size":4953,"mtime":1618694853930,"results":"40","hashOfConfig":"35"},{"size":6455,"mtime":1618695320009,"results":"41","hashOfConfig":"35"},{"size":6899,"mtime":1618589766739,"results":"42","hashOfConfig":"35"},{"size":9695,"mtime":1618589766739,"results":"43","hashOfConfig":"35"},{"size":8022,"mtime":1618589766739,"results":"44","hashOfConfig":"35"},{"size":48,"mtime":1618589766739,"results":"45","hashOfConfig":"35"},{"size":927,"mtime":1618589766739,"results":"46","hashOfConfig":"35"},{"size":130,"mtime":1618589766739,"results":"47","hashOfConfig":"35"},{"size":80,"mtime":1618589766739,"results":"48","hashOfConfig":"35"},{"size":732,"mtime":1618589766739,"results":"49","hashOfConfig":"35"},{"size":3295,"mtime":1618589766739,"results":"50","hashOfConfig":"35"},{"size":1256,"mtime":1618589766739,"results":"51","hashOfConfig":"35"},{"size":604,"mtime":1618589766739,"results":"52","hashOfConfig":"35"},{"size":1482,"mtime":1618589766739,"results":"53","hashOfConfig":"35"},{"size":1321,"mtime":1618589766739,"results":"54","hashOfConfig":"35"},{"size":119,"mtime":1618589766739,"results":"55","hashOfConfig":"35"},{"size":156,"mtime":1618589766739,"results":"56","hashOfConfig":"35"},{"size":3271,"mtime":1618589766739,"results":"57","hashOfConfig":"35"},{"size":859,"mtime":1618589766739,"results":"58","hashOfConfig":"35"},{"size":1513,"mtime":1618589766739,"results":"59","hashOfConfig":"35"},{"size":521,"mtime":1618589766739,"results":"60","hashOfConfig":"35"},{"size":4907,"mtime":1618589766739,"results":"61","hashOfConfig":"35"},{"size":466,"mtime":1618589766739,"results":"62","hashOfConfig":"35"},{"size":3997,"mtime":1618589766739,"results":"63","hashOfConfig":"35"},{"size":2687,"mtime":1618589766739,"results":"64","hashOfConfig":"35"},{"size":533,"mtime":1618589766739,"results":"65","hashOfConfig":"35"},{"size":1085,"mtime":1618589766739,"results":"66","hashOfConfig":"35"},{"size":2007,"mtime":1618589766739,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1apwu75",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/index.tsx",[],["150","151"],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/App.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/RouterApp.tsx",["152"],"import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport AuthRouteDefault from \"./components/AuthRoute\";\nimport Error404 from \"./views/404\";\nimport Hey from \"./views/Hey\";\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\nimport Posts from \"./views/Posts\";\nimport Profiles from \"./views/Profiles\";\nimport SignUp from \"./views/SignUp\";\n\nconst RouterApp = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Login />\n        </Route>\n        <Route exact path=\"/hey\">\n          <Hey />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/posts/:id\">\n          <Posts />\n        </Route>\n        <Route path=\"/404\">\n          <Error404 />\n        </Route>\n        <Route path=\"/profiles/:username\">\n          <Profiles />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RouterApp;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Hey/index.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/404/index.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Home/index.tsx",["153"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Layout from \"../../layout\";\nimport styles from \"./Home.module.scss\";\n\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport { postData, getData } from \"../../utils/API\";\nimport Modal from \"../../components/Modal\";\nimport Avatar from \"../../components/Avatar\";\nimport Spinner from \"../../components/Spinner\";\nimport Post from \"../../components/Post\";\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\n\nconst Home = () => {\n  const [file, setFile] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const [addPostLoading, setAddPostLoading] = useState(false);\n  const [loadingPost, setLoadingPost] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [user, setUser] = useState<any>();\n  const [data, setData] = useState<any>([]);\n  const fileInputRef = useRef<any>();\n  const contentInputRef = useRef<any>();\n\n  const handleOnChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const reader = new Promise<string>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n      reader.onload = () => resolve(reader.result.toString());\n      reader.onerror = (error) => reject(error);\n    });\n    setFile(await reader);\n  };\n\n  const getPosts = async () => {\n    var promisePosts: any = getData(`${API_URL}/api/posts/getAll`);\n    var setPosts = await promisePosts;\n    let data = setPosts?.data?.data;\n    data?.reverse();\n    setData(data);\n    setLoadingPost(false);\n  };\n\n  const handleOnSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    setAddPostLoading(true);\n    e.preventDefault();\n    const req = postData(`${API_URL}/api/posts/postsCreate`, {\n      username: localStorage.getItem(\"username\"),\n      img: file,\n      description: content,\n    });\n    const res = await req;\n    if (res?.data?.success) {\n      fileInputRef.current.value = \"\";\n      contentInputRef.current.value = \"\";\n      setVisible(false);\n      getPosts();\n      setAddPostLoading(false);\n    } else {\n      alert(\"Ops! Something went wrong.\");\n      setAddPostLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      var promisePosts: any = getData(`${API_URL}/api/posts/getAll`);\n      var setPosts = await promisePosts;\n      let data = setPosts?.data?.data;\n      data?.reverse();\n      setData(data);\n      setLoadingPost(false);\n    };\n    const getUser = async () => {\n      var promisePosts: any = postData(`${API_URL}/api/auth/getUser`);\n      var user = await promisePosts;\n      setUser(user?.data?.data);\n      setLoadingUser(false);\n    };\n    getPosts();\n    getUser();\n  }, []);\n\n  return (\n    <Layout>\n      <AuthMiddleware onAuth={false} noAuth=\"/\" />\n      <div className={styles.container}>\n        <div className={styles.box1}>\n          <button className={styles.addPost} onClick={() => setVisible(true)}>\n            Add Post\n          </button>\n          {loadingPost ? (\n            <Spinner\n              width=\"100%\"\n              height=\"100px\"\n              spinnerWidth=\"20px\"\n              spinnerHeight=\"20px\"\n            />\n          ) : (\n            data?.map((item: any, index: number) => {\n              return <Post data={item} index={index} />;\n            })\n          )}\n        </div>\n        <div className={styles.sidebar}>\n          <div className={styles.sidebarHead}>\n            <Avatar width={56} height={56} />\n            <div className={styles.shDetail}>\n              <p>{user?.username || \"\"}</p>\n              <p>{user?.fullname || \"\"}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        visible={visible}\n        onClose={() => setVisible(false)}\n        width=\"50%\"\n        height=\"200px\"\n      >\n        <div className={styles.modal}>\n          <form\n            onSubmit={(e) => {\n              handleOnSubmit(e);\n            }}\n          >\n            <label>\n              Photo:&nbsp;\n              <input\n                className={styles.fileInput}\n                ref={fileInputRef}\n                accept=\".png,.jpg,.jpeg,.webp\"\n                type=\"file\"\n                onChange={(e) => {\n                  handleOnChange(e);\n                }}\n              />\n            </label>\n            <label>\n              Content:&nbsp;\n              <input\n                className={styles.textInput}\n                ref={contentInputRef}\n                type=\"text\"\n                onChange={(e) => {\n                  setContent(e.target.value);\n                }}\n              />\n            </label>\n\n            <input\n              disabled={addPostLoading ? true : false}\n              className={styles.submitInput}\n              type=\"submit\"\n              value=\"Create Post\"\n            />\n          </form>\n        </div>\n      </Modal>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Login/index.tsx",["154"],"import React, { useEffect, useState } from \"react\";\nimport Logo from \"../../components/Logo\";\nimport styles from \"./Login.module.scss\";\nimport facebook from \"../../assets/images/components/Logo/icon/Facebook.webp\";\nimport googleplay from \"../../assets/images/global/googleplay.webp\";\nimport appstore from \"../../assets/images/global/appstore.webp\";\n\nimport ss1 from \"../../assets/images/global/telephoneScreenshots/1.webp\";\nimport ss2 from \"../../assets/images/global/telephoneScreenshots/2.webp\";\nimport ss3 from \"../../assets/images/global/telephoneScreenshots/3.webp\";\nimport ss4 from \"../../assets/images/global/telephoneScreenshots/4.webp\";\nimport ss5 from \"../../assets/images/global/telephoneScreenshots/5.webp\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getData, postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n\n  const route = useHistory();\n\n  // SLIDER\n\n  var slideIndex = 2;\n\n  const Slider = setInterval(() => {\n    var ssid = document.getElementsByClassName(\n      `ss${slideIndex}`\n    ) as HTMLCollectionOf<HTMLImageElement>;\n    var ssidPrev = document.getElementsByClassName(\n      `ss${slideIndex - 1}`\n    ) as HTMLCollectionOf<HTMLImageElement>;\n    if (slideIndex === 1) {\n      ssidPrev = document.getElementsByClassName(\n        `ss5`\n      ) as HTMLCollectionOf<HTMLImageElement>;\n    }\n    if (window.location.pathname === \"/\") {\n      ssidPrev[0].style.opacity = \"0\";\n      ssid[0].style.opacity = \"1\";\n      slideIndex === 5 ? (slideIndex = 1) : (slideIndex += 1);\n    } else {\n      clearInterval(Slider);\n    }\n  }, 6000);\n\n  // AUTH\n\n  const buttonTrue = email.length > 0 && password.length > 5;\n\n  const LoginFetch = async () => {\n    if (buttonTrue) {\n      const post: any = postData(`${API_URL}/api/auth/login`, {\n        email: email,\n        password: password,\n      });\n      const res = await post;\n      console.log(email);\n      if (res.data.success) {\n        const username = await getData(\n          `${API_URL}/api/auth/getUsername/${email}`\n        );\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"username\", await username.data.data.username);\n        route.push(\"/home\");\n        setError(false);\n      } else {\n        setError(true);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <AuthMiddleware onAuth=\"/home\" noAuth={false} />\n      <div className={styles.container1}>\n        <div\n          className={styles.ImgBox}\n          onDragStart={(e) => {\n            e.preventDefault();\n          }}\n        >\n          <img src={ss1} className=\"ss1\" loading=\"lazy\" alt=\"Screenshot\" />\n          <img src={ss2} className=\"ss2\" loading=\"lazy\" alt=\"Screenshot\" />\n          <img src={ss3} className=\"ss3\" loading=\"lazy\" alt=\"Screenshot\" />\n          <img src={ss4} className=\"ss4\" loading=\"lazy\" alt=\"Screenshot\" />\n          <img src={ss5} className=\"ss5\" loading=\"lazy\" alt=\"Screenshot\" />\n        </div>\n      </div>\n      <div className={styles.container2}>\n        <div className={styles.box1}>\n          <Logo height=\"51\" width=\"175\" />\n          <label id={styles.emailLabel} className={styles.Label}>\n            <input\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              style={email.length > 0 ? { paddingTop: \"14px\" } : void 0}\n              value={email}\n              type=\"email\"\n              className={styles.Input}\n            />\n            <span\n              style={\n                email.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\n              }\n            >\n              Email\n            </span>\n          </label>\n\n          <label id={styles.passLabel} className={styles.Label}>\n            <input\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n              style={password.length > 0 ? { paddingTop: \"14px\" } : void 0}\n              value={password}\n              type={show ? \"text\" : \"password\"}\n              className={styles.Input}\n            />\n            <span\n              style={\n                password.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\n              }\n            >\n              Password\n            </span>\n            <button\n              onClick={() => {\n                setShow(!show);\n              }}\n              style={{ display: password.length > 0 ? \"inline-block\" : \"none\" }}\n              className={styles.inputButton}\n            >\n              {show ? \"Hide\" : \"Show\"}\n            </button>\n          </label>\n\n          <button\n            disabled={email.length > 0 && password.length >= 6 ? false : true}\n            className={styles.login}\n            onClick={LoginFetch}\n          >\n            Log In\n          </button>\n          {error && (\n            <h4 className={styles.error}>Ops! Something went wrong.</h4>\n          )}\n\n          <div className={styles.or}>\n            <h5>OR</h5>\n          </div>\n\n          <Link to=\"/hey\" className={styles.facebookLogin}>\n            <img src={facebook} alt=\"Facebook Logo\" loading=\"lazy\" />\n            Log in with Facebook\n          </Link>\n\n          <Link to=\"/hey\" className={styles.forgotPass}>\n            Forgot password?\n          </Link>\n        </div>\n        <div className={styles.box2}>\n          <p>\n            Don't have an account?&nbsp;\n            <Link className={styles.signup} to=\"/signup\">\n              Sign up\n            </Link>\n          </p>\n        </div>\n\n        <p className={styles.getApp}>Get the app.</p>\n        <div className={styles.box3}>\n          <a href=\"https://apps.apple.com/app/instagram/id389801252?vt=lo\">\n            <img\n              src={appstore}\n              className={styles.astore}\n              alt=\"App Store\"\n              loading=\"lazy\"\n            />\n          </a>\n\n          <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android\">\n            <img\n              src={googleplay}\n              className={styles.gplay}\n              alt=\"Google Play\"\n              loading=\"lazy\"\n            />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Posts/index.tsx",["155","156","157"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styles from \"./Posts.module.scss\";\nimport Spinner from \"../../components/Spinner\";\nimport Layout from \"../../layout\";\nimport { postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport CartHeader from \"../../components/CartHeader\";\nimport HearthIcon from \"../../assets/images/global/icons/Hearth\";\nimport CommentPostIcon from \"../../assets/images/global/icons/CommentPost\";\nimport SendIcon from \"../../assets/images/global/icons/Send\";\nimport BookmarkIcon from \"../../assets/images/global/icons/Bookmark\";\nimport moment from \"moment\";\nimport CartPost from \"../../components/CartPost\";\nimport Avatar from \"../../components/Avatar\";\nimport CommentRelease from \"../../assets/images/global/icons/CommentRelease.svg\";\nimport { postCommentTrigger as PCT } from \"../../store/atom\";\nimport { useRecoilValue } from \"recoil\";\n\nconst Posts = () => {\n  const [loading, setLoading] = useState(true);\n  const [onAddComment, setOnAddComment] = useState<any>([]);\n  const [data, setData] = useState<any>();\n  const [profile, setProfile] = useState<any>();\n  const onPostComment = useRecoilValue(PCT);\n  const location = useLocation();\n  const link = useHistory();\n  useEffect(() => {\n    const getPost = async () => {\n      var dataPromise = postData(`${API_URL}/api/posts/getPostOnId`, {\n        id: location.pathname.split(\"/\")[2],\n      });\n      var res = await dataPromise;\n      if (res?.data?.data) {\n        setData(res?.data?.data);\n        setLoading(false);\n        console.log(res.data.data);\n      } else {\n        return link.push(\"/404\");\n      }\n    };\n\n    const getUser = async () => {\n      var dataPromise = postData(`${API_URL}/api/auth/getUser`);\n      var res = await dataPromise;\n      if (res?.data?.data) {\n        setProfile(res?.data?.data);\n      }\n    };\n    getPost();\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    if (onPostComment.id.length > 0) {\n      let newData = [...onAddComment, onPostComment];\n      console.log(newData);\n      setOnAddComment(newData);\n    }\n  }, [onPostComment]);\n  return (\n    <div>\n      {loading ? (\n        <Spinner\n          width=\"100vw\"\n          height=\"100vh\"\n          spinnerHeight=\"25px\"\n          spinnerWidth=\"25px\"\n        />\n      ) : (\n        <Layout>\n          <div className={styles.container}>\n            <div className={styles.postsContainer}>\n              <div className={styles.postsImage}>\n                <div className={styles.responsiveHeader}>\n                  {/* Responsive mobile */}\n                  <CartHeader\n                    pageName={data?.username}\n                    username={data?.username}\n                    obId={data?._id}\n                    width=\"100%\"\n                    height=\"60px\"\n                  />\n                </div>\n                <img src={data?.img} alt=\"Image\" />\n                <div className={styles.responsiveFooter}>\n                  <div className={styles.icons}>\n                    <div className={styles.iconsBox1}>\n                      <HearthIcon\n                        obId={data?._id}\n                        width={24}\n                        height={24}\n                        index={0}\n                        postPageResponsive={true}\n                      />\n                      <CommentPostIcon width={24} height={24} />\n                      <SendIcon width={24} height={24} />\n                    </div>\n                    <div className={styles.iconsBox2}>\n                      <BookmarkIcon obId={data?._id} width={24} height={24} />\n                    </div>\n                  </div>\n                  <h1 className={styles.likeCount}>\n                    <span>{data?.likesNumber}</span> likes\n                  </h1>\n                  <div className={styles.timeAgo}>\n                    {moment(data?.createdAt).fromNow()}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.postsDetails}>\n                <CartHeader\n                  pageName={data?.username}\n                  username={data?.username}\n                  obId={data?._id}\n                  width=\"100%\"\n                  height=\"96px\"\n                />\n                <div className={styles.pdContent}>\n                  <div className={styles.pdcHead}>\n                    <Avatar width={32} height={32} />\n                    <p>{data?.username}</p>\n                    <p>{data?.description}</p>\n                  </div>\n                  {/* Below code run on add comment */}\n                  {onAddComment?.map((item: any) => {\n                    return (\n                      <div className={styles.pdcComment}>\n                        <Avatar width={32} height={32} />\n                        <p>\n                          <span>{item.username}</span>&nbsp;\n                          {item.message}\n                        </p>\n                      </div>\n                    );\n                  })}\n\n                  {/*  DB Comments Map */}\n                  {data.comments?.map((item: any) => {\n                    return (\n                      <div className={styles.pdcComment}>\n                        <Avatar width={32} height={32} />\n                        <p>\n                          <span>{item.username}</span>&nbsp;\n                          {item.message}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n                <div>\n                  <div className={styles.icons}>\n                    <div className={styles.iconsBox1}>\n                      <HearthIcon\n                        obId={data?._id}\n                        width={24}\n                        height={24}\n                        index={1}\n                        postPage={true}\n                      />\n                      <img src={CommentRelease} alt=\"Comment\" />\n                      <SendIcon width={24} height={24} />\n                    </div>\n                    <div className={styles.iconsBox2}>\n                      <BookmarkIcon obId={data?._id} width={24} height={24} />\n                    </div>\n                  </div>\n                  <h1 className={styles.likeCount}>\n                    <span>{data?.likesNumber}</span> likes\n                  </h1>\n                  <div className={styles.timeAgo}>\n                    {moment(data?.createdAt).fromNow()}\n                  </div>\n                  <CartPost\n                    width=\"100%\"\n                    height=\"56px\"\n                    index={0}\n                    postInfo={{ name: profile?.username, obId: data?._id }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Layout>\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/Profiles/index.tsx",["158","159"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\nimport Spinner from \"../../components/Spinner\";\nimport Layout from \"../../layout\";\nimport { postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\nimport styles from \"./Profiles.module.scss\";\nimport postsIcon from \"../../assets/images/global/postsIcon.svg\";\nimport HearthIcon from \"../../assets/images/global/icons/Hearth\";\nimport CommentIcon from \"../../assets/images/global/icons/Comment\";\n\nconst Profiles = () => {\n  const [loading, setLoading] = useState(true);\n  const [userProfile, setUserProfile] = useState<any>();\n  const [user, setUser] = useState<any>();\n  const [followBool, setFollowBool] = useState(false);\n  const [mobile, setMobile] = useState(window.innerWidth < 735 ? true : false);\n  const [posts, setPosts] = useState<any>();\n  const link = useHistory();\n  const profile = useLocation().pathname.split(\"/\")[2];\n\n  const clickPost = (path: string) => {\n    return link.push(`/posts/${path}`);\n  };\n\n  const checkFollow = async () => {\n    const req = postData(`${API_URL}/api/auth/checkFollow`, {\n      usernamePost: profile,\n    });\n    const res = await req;\n    return res?.data?.data ? setFollowBool(true) : setFollowBool(false);\n  };\n\n  const toggleFollow = async () => {\n    const req = postData(`${API_URL}/api/auth/toggleFollow`, {\n      usernamePost: profile,\n    });\n    const res = await req;\n    return res?.data?.data ? setFollowBool(!followBool) : void 0;\n  };\n\n  const getUser = async () => {\n    var dataPromise = postData(`${API_URL}/api/auth/getUser`);\n    var res = await dataPromise;\n    if (res?.data?.data) {\n      setUser(res?.data?.data);\n    } else {\n      return link.push(\"/404\");\n    }\n  };\n  const getUserProfile = async () => {\n    var dataPromise = postData(`${API_URL}/api/auth/getUserOnUsername`, {\n      username: profile,\n    });\n    var res = await dataPromise;\n    if (res?.data?.data) {\n      setUserProfile(res?.data?.data);\n    } else {\n      return link.push(\"/404\");\n    }\n  };\n  const getUserPosts = async () => {\n    var dataPromise = postData(`${API_URL}/api/posts/getUserPost`, {\n      username: profile,\n    });\n    var res = await dataPromise;\n    var data = res?.data?.data;\n    data?.reverse();\n    if (data) {\n      setPosts(data);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n    getUserProfile();\n    getUserPosts();\n    checkFollow();\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    getUser();\n    getUserProfile();\n    getUserPosts();\n    checkFollow();\n  }, [window.location.pathname]);\n  window.addEventListener(\"resize\", () => {\n    setMobile(window.innerWidth < 735 ? true : false);\n  });\n  return (\n    <div>\n      <AuthMiddleware onAuth={false} noAuth=\"/\" />\n      {loading ? (\n        <Spinner\n          width=\"100%\"\n          height=\"100vh\"\n          spinnerWidth=\"25px\"\n          spinnerHeight=\"25px\"\n        />\n      ) : (\n        <Layout>\n          <div className={styles.profileHead}>\n            <Avatar\n              width={mobile ? 77 : 145}\n              height={mobile ? 77 : 145}\n              border\n              borderHeight={mobile ? 107 : 205}\n              borderWidth={mobile ? 107 : 205}\n              margin=\"0 101px 0 71px\"\n            />\n            <div className={styles.headContent}>\n              <div className={styles.hcBox1}>\n                <h1>{profile}</h1>\n                <div className={styles.hcBox1BP}>\n                  {profile === user?.username ? (\n                    <button className={styles.editProfile}>Edit Profile</button>\n                  ) : followBool ? (\n                    <button onClick={toggleFollow} className={styles.unfollow}>\n                      Unfollow\n                    </button>\n                  ) : (\n                    <button onClick={toggleFollow} className={styles.follow}>\n                      Follow\n                    </button>\n                  )}\n                </div>\n              </div>\n              <div className={styles.hcBox2}>\n                <h1 className={styles.hc2Content1}>\n                  <span>{posts?.length}</span> posts\n                </h1>\n                <h1 className={styles.hc2Content2}>\n                  <span>{userProfile?.follows.length}</span> following\n                </h1>\n              </div>\n              <div className={styles.hcBox3}>\n                <h1>{userProfile?.fullname}</h1>\n              </div>\n            </div>\n          </div>\n          {/* MOBILE FOLLOW POST BAR BEGIN */}\n          <div className={styles.mobileBar}>\n            <div className={styles.mbBox1}>\n              <p>{posts?.length}</p>\n              <p>posts</p>\n            </div>\n            <div className={styles.mbBox2}>\n              <p>{userProfile?.follows.length}</p>\n              <p>following</p>\n            </div>\n          </div>\n          {/* MOBILE FOLLOW POST BAR END */}\n          <div className={styles.contentNavbar}>\n            <button className={styles.cnBox1}>\n              <img src={postsIcon} alt=\"Posts Icon\" />\n              &nbsp;Posts\n            </button>\n          </div>\n\n          {new Array(+(posts?.length % 3) + +(posts?.length / 3).toFixed(0))\n            .fill(0)\n            .map((_, index) => {\n              if (posts) {\n                let imgIndex = index * 3;\n                return (\n                  <div className={styles.postsContainer}>\n                    <div className={styles.postsSection}>\n                      {posts[imgIndex] !== undefined ? (\n                        <div\n                          onClick={() => {\n                            clickPost(posts[imgIndex]._id);\n                          }}\n                          className={styles.psContainer}\n                        >\n                          <img src={posts[imgIndex].img} alt=\"Posts\" />\n                          <div className={styles.psHoverBG}></div>\n                          <div className={styles.psHover}>\n                            <HearthIcon\n                              width=\"19px\"\n                              height=\"19px\"\n                              color=\"white\"\n                            />\n                            <p>{posts[imgIndex].likes.length}</p>\n                            <CommentIcon\n                              width=\"19px\"\n                              height=\"19px\"\n                              color=\"white\"\n                              fill=\"white\"\n                            />\n                            <p>{posts[imgIndex].comments.length}</p>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className={styles.psContainerBlank}></div>\n                      )}\n                      {posts[imgIndex + 1] !== undefined ? (\n                        <div\n                          onClick={() => {\n                            clickPost(posts[imgIndex + 1]._id);\n                          }}\n                          className={styles.psContainer}\n                        >\n                          <img src={posts[imgIndex + 1].img} alt=\"Posts\" />\n                          <div className={styles.psHoverBG}></div>\n                          <div className={styles.psHover}>\n                            <HearthIcon\n                              width=\"19px\"\n                              height=\"19px\"\n                              color=\"white\"\n                            />\n                            <p>{posts[imgIndex + 1].likes.length}</p>\n                            <CommentIcon\n                              width=\"19px\"\n                              height=\"19px\"\n                              color=\"white\"\n                              fill=\"white\"\n                            />\n                            <p>{posts[imgIndex + 1].comments.length}</p>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className={styles.psContainerBlank}></div>\n                      )}\n                      {posts[imgIndex + 2] !== undefined ? (\n                        <div\n                          onClick={() => {\n                            clickPost(posts[imgIndex + 2]._id);\n                          }}\n                          className={styles.psContainer}\n                        >\n                          <img src={posts[imgIndex + 2].img} alt=\"Posts\" />\n                          <div className={styles.psHoverBG}></div>\n                          <div className={styles.psHover}>\n                            <HearthIcon\n                              width=\"19px\"\n                              height=\"19px\"\n                              color=\"white\"\n                            />\n                            <p>{posts[imgIndex + 2].likes.length}</p>\n                            <CommentIcon\n                              width=\"19px\"\n                              height=\"19px\"\n                              color=\"white\"\n                              fill=\"white\"\n                            />\n                            <p>{posts[imgIndex + 2].comments.length}</p>\n                          </div>\n                        </div>\n                      ) : (\n                        <div className={styles.psContainerBlank}></div>\n                      )}\n                    </div>\n                  </div>\n                );\n              } else {\n                return <></>;\n              }\n            })}\n        </Layout>\n      )}\n    </div>\n  );\n};\n\nexport default Profiles;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/views/SignUp/index.tsx",["160","161","162","163"],"import React, { useState } from \"react\";\nimport Logo from \"../../components/Logo\";\nimport styles from \"./SignUp.module.scss\";\nimport googleplay from \"../../assets/images/global/googleplay.webp\";\nimport appstore from \"../../assets/images/global/appstore.webp\";\nimport facebookWhite from \"../../assets/images/views/SignUp/icons/facebookWhite.webp\";\nimport correct from \"../../assets/images/global/icons/correct.svg\";\nimport wrong from \"../../assets/images/global/icons/wrong.svg\";\n\nimport { postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport { checkString } from \"../../utils/helpers\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthMiddleware from \"../../utils/AuthMiddleware\";\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailCheck, setEmailCheck] = useState(false);\n  const [emailCheckDB, setEmailCheckDB] = useState(false);\n  const [fullnameCheck, setFullnameCheck] = useState(false);\n  const [usernameCheck, setUsernameCheck] = useState(false);\n  const [usernameCheckDB, setUsernameCheckDB] = useState(false);\n  const [passwordCheck, setPasswordCheck] = useState(false);\n  const [error, setError] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const route = useHistory();\n\n  const buttonTrue =\n    !emailCheck && usernameCheck && passwordCheck && fullnameCheck;\n\n  const SignUpFetch = async () => {\n    if (buttonTrue) {\n      const post: any = postData(`${API_URL}/api/auth/register`, {\n        username: username,\n        fullname: name,\n        email: email,\n        password: password,\n      });\n      const res = await post;\n      if (res.data.success) {\n        setError(false);\n        return route.push(\"/\");\n      } else {\n        return setError(true);\n      }\n    }\n  };\n\n  const DBEmailCheck = async (e: string) => {\n    const post: any = postData(`${API_URL}/api/auth/checkEmail`, {\n      email: e,\n    });\n    const res = await post;\n    !res.data.success ? setEmailCheckDB(false) : setEmailCheckDB(true);\n  };\n\n  const DBUsernameCheck = async (e: string) => {\n    const post: any = postData(`${API_URL}/api/auth/checkUsername`, {\n      username: e,\n    });\n    const res = await post;\n    res.data.success ? setUsernameCheckDB(false) : setUsernameCheckDB(true);\n  };\n\n  return (\n    <div className={styles.container}>\n      <AuthMiddleware onAuth=\"/home\" noAuth={false} />\n      <div className={styles.container2}>\n        <div className={styles.box1}>\n          <Logo height=\"51\" width=\"175\" />\n          <p className={styles.headText}>\n            Sign up to see photos and videos from your friends.\n          </p>\n          <Link to=\"/hey\">\n            <button className={styles.loginFacebook}>\n              <img src={facebookWhite} alt=\"Facebook Icon\" />\n              Log in with Facebook\n            </button>\n          </Link>\n\n          <div className={styles.or}>\n            <h5>OR</h5>\n          </div>\n          <label id={styles.emailLabel} className={styles.Label}>\n            <input\n              onChange={(e) => {\n                setEmailCheck(\n                  !checkString(e.target.value, /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)\n                );\n                DBEmailCheck(e.target.value);\n                setEmail(e.target.value);\n              }}\n              style={email.length > 0 ? { paddingTop: \"14px\" } : void 0}\n              value={email}\n              type=\"email\"\n              className={styles.Input}\n            />\n            <span\n              style={\n                email.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\n              }\n            >\n              Email\n            </span>\n            {email.length > 0 && (\n              <img src={!emailCheck && !emailCheckDB ? correct : wrong} />\n            )}\n          </label>\n\n          <label id={styles.Name} className={styles.Label}>\n            <input\n              onChange={(e) => {\n                setFullnameCheck(e.target.value.length > 5);\n                setName(e.target.value);\n              }}\n              style={name.length > 0 ? { paddingTop: \"14px\" } : void 0}\n              value={name}\n              type=\"text\"\n              className={styles.Input}\n            />\n            <span\n              style={\n                name.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\n              }\n            >\n              Full Name\n            </span>\n            {name.length > 0 && <img src={fullnameCheck ? correct : wrong} />}\n          </label>\n\n          <label id={styles.Username} className={styles.Label}>\n            <input\n              onChange={(e) => {\n                setUsernameCheck(e.target.value.length > 5);\n                setUsername(e.target.value);\n                DBUsernameCheck(e.target.value);\n              }}\n              style={username.length > 0 ? { paddingTop: \"14px\" } : void 0}\n              value={username}\n              type=\"text\"\n              className={styles.Input}\n            />\n            <span\n              style={\n                username.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\n              }\n            >\n              Username\n            </span>\n            {username.length > 0 && (\n              <img src={usernameCheck && usernameCheckDB ? correct : wrong} />\n            )}\n          </label>\n\n          <label id={styles.passLabel} className={styles.Label}>\n            <input\n              onChange={(e) => {\n                setPasswordCheck(e.target.value.length > 5);\n                setPassword(e.target.value);\n              }}\n              style={password.length > 0 ? { paddingTop: \"14px\" } : void 0}\n              value={password}\n              type={show ? \"text\" : \"password\"}\n              className={styles.Input}\n            />\n            <span\n              style={\n                password.length > 0 ? { top: \"4px\", fontSize: \"10px\" } : void 0\n              }\n            >\n              Password\n            </span>\n            {password.length > 0 && (\n              <img src={passwordCheck ? correct : wrong} />\n            )}\n            <button\n              onClick={() => {\n                setShow(!show);\n              }}\n              style={{\n                display: password.length > 0 ? \"inline-block\" : \"none\",\n              }}\n              className={styles.inputButton}\n            >\n              {show ? \"Hide\" : \"Show\"}\n            </button>\n          </label>\n\n          <button\n            type=\"submit\"\n            disabled={buttonTrue ? false : true}\n            className={styles.login}\n            onClick={SignUpFetch}\n          >\n            Sign up\n          </button>\n\n          {error && (\n            <h4 className={styles.error}>Ops! Something went wrong.</h4>\n          )}\n\n          <h4 className={styles.policy}>\n            By signing up, you agree to our{\" \"}\n            <Link to=\"/hey\">Terms, Data Policy</Link> and{\" \"}\n            <Link to=\"/hey\">Cookies Policy.</Link>\n          </h4>\n        </div>\n        <div className={styles.box2}>\n          <p>\n            Have an account?&nbsp;\n            <Link className={styles.signup} to=\"/\">\n              Log in\n            </Link>\n          </p>\n        </div>\n\n        <p className={styles.getApp}>Get the app.</p>\n        <div className={styles.box3}>\n          <a href=\"https://apps.apple.com/app/instagram/id389801252?vt=lo\">\n            <img\n              src={appstore}\n              className={styles.astore}\n              alt=\"App Store\"\n              loading=\"lazy\"\n            />\n          </a>\n\n          <a href=\"https://play.google.com/store/apps/details?id=com.instagram.android\">\n            <img\n              src={googleplay}\n              className={styles.gplay}\n              alt=\"Google Play\"\n              loading=\"lazy\"\n            />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/API_SETTINGS.ts",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/API.ts",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/helpers.ts",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/store/atom.ts",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/utils/AuthMiddleware.tsx",["164"],"import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { postData } from \"./API\";\nimport { API_URL } from \"./API_SETTINGS\";\n\ninterface authmiddleware {\n  onAuth: string | boolean;\n  noAuth: string | boolean;\n}\n\nconst AuthMiddleware = ({ onAuth, noAuth }: authmiddleware) => {\n  const link = useHistory();\n\n  useEffect(() => {\n    return async () => {\n      var dataPromise = postData(`${API_URL}/api/auth/authCheck`);\n      var data = await dataPromise;\n      if (data?.data.success) {\n        return onAuth ? link.push(onAuth as string) : true;\n      } else {\n        return noAuth ? link.push(noAuth as string) : false;\n      }\n    };\n  }, []);\n  return <></>;\n};\n\nexport default AuthMiddleware;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Hearth.tsx",["165","166"],"import * as React from \"react\";\nimport { postData } from \"../../../../utils/API\";\nimport { API_URL } from \"../../../../utils/API_SETTINGS\";\nimport { photoClickTrigger as PCT } from \"../../../../store/atom\";\nimport { useRecoilValue } from \"recoil\";\n\nfunction HearthIcon(props: any) {\n  const [like, setLike] = React.useState(\"white\");\n  const svgRef = React.useRef<any>(null);\n  const photoClickTrigger = useRecoilValue(PCT);\n  const toggleLike = async (id: string) => {\n    postData(`${API_URL}/api/posts/addLike`, {\n      id: id,\n      username: localStorage.getItem(\"username\"),\n    });\n    postData(`${API_URL}/api/auth/toggleLike`, {\n      id: id,\n      username: localStorage.getItem(\"username\"),\n    });\n  };\n  const checkLike = async (id: string) => {\n    const req = postData(`${API_URL}/api/auth/checkLike`, {\n      id: id,\n      username: localStorage.getItem(\"username\"),\n    });\n    const res = await req;\n    return res?.data?.data ? setLike(\"#ED4956\") : setLike(\"white\");\n  };\n\n  const toggleHearthColor = () => {\n    try {\n      const svgElement = document.getElementsByClassName(\"hearthSvg\")[\n        props.index\n      ];\n      let element;\n      if (!props.postPage && !props.postPageResponsive) {\n        element = svgElement.parentElement.parentElement.parentElement\n          .childNodes[1].childNodes[0] as HTMLParagraphElement;\n      }\n\n      if (props.postPage) {\n        element = svgElement.parentElement.parentElement.parentElement\n          .childNodes[1].childNodes[0] as HTMLHeadingElement;\n      }\n      if (props.postPageResponsive) {\n        element = svgElement.parentElement.parentElement.parentElement\n          .childNodes[1].childNodes[0] as HTMLHeadingElement;\n      }\n      let likeCount = element.innerText;\n      toggleLike(props.obId);\n      if (like === \"white\") {\n        element.innerText = String(+likeCount + 1);\n        setLike(\"#ED4956\");\n      } else {\n        element.innerText = String(+likeCount === 0 ? 0 : +likeCount - 1);\n        setLike(\"white\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    if (svgRef.current) {\n      checkLike(props.obId);\n    } else {\n      svgRef.current = true;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (props.obId && photoClickTrigger === props.obId) {\n      toggleHearthColor();\n    }\n  }, [photoClickTrigger]);\n  return (\n    <svg\n      width={props.width}\n      height={props.height}\n      viewBox=\"0 0 21 19\"\n      fill={props.color || like}\n      id=\"hearthSvg\"\n      className={props.obId && \"hearthSvg\"}\n      ref={svgRef}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      onClick={() => {\n        if (props.obId) {\n          toggleHearthColor();\n        }\n      }}\n    >\n      <path\n        d=\"M10.305 2.943l.374.425.375-.425.61-.69c1.773-2.009 5.038-2.346 7.273-.726 1.06.768 1.51 1.947 1.559 3.193.048 1.254-.316 2.515-.811 3.339-2.766 4.6-4.898 6.909-9.018 10.304-2.186-1.654-3.77-2.861-5.126-4.215-1.409-1.406-2.58-2.98-3.897-5.388C.162 6.05.279 3.08 2.42 1.527c2.235-1.62 5.5-1.283 7.273.725l.61.691z\"\n        fill={props.color || like}\n        stroke={\n          props.color ? props.color : like === \"white\" ? \"#000\" : \"#ED4956\"\n        }\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport default HearthIcon;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/CommentPost.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Send.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Bookmark.tsx",["167"],"import * as React from \"react\";\nimport { postData } from \"../../../../utils/API\";\nimport { API_URL } from \"../../../../utils/API_SETTINGS\";\n\nfunction BookmarkIcon(props: any) {\n  const [bookmark, setBookmark] = React.useState(\"\");\n  const svgRef = React.useRef<any>();\n  const toggleBookmark = async (id: string) => {\n    postData(`${API_URL}/api/auth/toggleBookmark`, {\n      id: id,\n      username: localStorage.getItem(\"username\"),\n    });\n  };\n  const checkBookmark = async (id: string) => {\n    const deneme = postData(`${API_URL}/api/auth/checkBookmark`, {\n      id: id,\n      username: localStorage.getItem(\"username\"),\n    });\n    const res = await deneme;\n    return res?.data?.data ? setBookmark(\"#262626\") : setBookmark(\"white\");\n  };\n\n  React.useEffect(() => {\n    if (svgRef.current) {\n      checkBookmark(props.obId);\n    } else {\n      svgRef.current = true;\n    }\n  }, []);\n  return (\n    <svg\n      width={props.width}\n      height={props.height}\n      viewBox=\"0 0 17 21\"\n      fill={bookmark}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n      ref={svgRef}\n      onClick={() => {\n        if (props.obId) {\n          toggleBookmark(props.obId);\n          bookmark === \"white\" ? setBookmark(\"#262626\") : setBookmark(\"white\");\n        }\n      }}\n    >\n      <path\n        d=\"M8.297 13.624l-7.17 6.274V.5h15v19.398l-7.171-6.274-.33-.288-.329.288z\"\n        stroke=\"#262626\"\n        fill={bookmark}\n      />\n    </svg>\n  );\n}\n\nexport default BookmarkIcon;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Comment.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/store/HearthIcon/hearthicon.atom.ts",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/store/Post/Post.atom.ts",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/layout/index.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Modal/index.tsx",["168","169"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./Modal.module.scss\";\n\ninterface modal {\n  width: string;\n  height: string;\n  visible: boolean;\n  children: any;\n  onClose: () => void;\n}\n\nconst Modal = ({ width, height, children, visible, onClose }: modal) => {\n  return (\n    <div\n      className={styles.container}\n      style={{ display: visible ? \"flex\" : \"none\" }}\n    >\n      <div\n        onClick={() => {\n          onClose();\n        }}\n        className={styles.modalBackground}\n      ></div>\n      <div className={styles.modal} style={{ width: width, height: height }}>\n        <div className={styles.modalHeader}>\n          <p\n            onClick={() => {\n              onClose();\n            }}\n          >\n            X\n          </p>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Avatar/index.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Spinner/index.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Post/index.tsx",["170","171","172","173","174"],"import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport BookmarkIcon from \"../../assets/images/global/icons/Bookmark\";\nimport HearthIcon from \"../../assets/images/global/icons/Hearth\";\nimport SendIcon from \"../../assets/images/global/icons/Send\";\nimport CartHeader from \"../CartHeader\";\nimport styles from \"./Post.module.scss\";\nimport { photoClickTrigger, postCommentTrigger as PCT } from \"../../store/atom\";\nimport CartPost from \"../CartPost\";\nimport moment from \"moment\";\nimport CommentPostIcon from \"../../assets/images/global/icons/CommentPost\";\nimport { Link } from \"react-router-dom\";\nimport { postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\n\ninterface post {\n  data: any;\n  index: number;\n}\n\nconst Post = ({ data, index }: post) => {\n  const [showHearth, setShowHearth] = useState(false);\n  const [comments, setComments] = useState(data.comments);\n  const [commentsNumberPlus, setCommentsNumberPlus] = useState(0);\n  const [viewAllComments, setViewAllComments] = useState(false);\n  const [postCommentTrigger, setPostCommentTrigger] = useRecoilState(PCT);\n  const [pct, setPct] = useRecoilState(photoClickTrigger);\n\n  useEffect(() => {\n    comments.reverse();\n  }, [comments]);\n\n  useEffect(() => {\n    const getUser = async () => {\n      if (postCommentTrigger.id === data._id) {\n        let username = \"\";\n        var promisePosts: any = postData(`${API_URL}/api/auth/getUser`);\n        var user = await promisePosts;\n        username = user?.data?.data?.username;\n        let newComments = [\n          {\n            username: username,\n            message: postCommentTrigger.message,\n          },\n          ...comments,\n        ];\n        setComments(newComments);\n        setCommentsNumberPlus(commentsNumberPlus + 1);\n      }\n    };\n    getUser();\n  }, [postCommentTrigger]);\n  return (\n    <div className={styles.cart}>\n      <CartHeader\n        username={data.username}\n        width=\"100%\"\n        height=\"60px\"\n        pageName={data.username}\n        obId={data._id}\n        maxWidth=\"614px\"\n      />\n      <span\n        onDoubleClick={() => {\n          setPct(data._id);\n          setShowHearth(true);\n          setTimeout(() => {\n            setShowHearth(false);\n            setPct(\"\");\n          }, 1000);\n        }}\n        className={styles.imgContainer}\n      >\n        <HearthIcon\n          display={showHearth ? \"block\" : \"none\"}\n          className={styles.imgHearth}\n          color=\"white\"\n          width={115}\n          height={115}\n          opacity={0.8}\n        />\n        <img\n          className={styles.img}\n          src={data.img}\n          onDragStart={(e) => e.preventDefault()}\n          alt=\"Post photo\"\n          loading=\"lazy\"\n        />\n      </span>\n      <div className={styles.cartInfo}>\n        <div className={styles.cartIcons}>\n          <div className={styles.CILeft}>\n            <HearthIcon obId={data._id} width={24} height={24} index={index} />\n            <Link to={`/posts/${data?._id}`}>\n              <CommentPostIcon width={24} height={24} />\n            </Link>\n            <SendIcon width={24} height={24} />\n          </div>\n          <div className={styles.CIRight}>\n            <BookmarkIcon obId={data._id} width={24} height={24} />\n          </div>\n        </div>\n        <div className={styles.likes}>\n          <p>{data.likesNumber}</p>&nbsp;\n          {data.likesNumber < 2 ? \"like\" : \"likes\"}\n        </div>\n        <div className={styles.cartName}>\n          {data.username}&nbsp;\n          <p className={styles.cartNameContent}>{data.description}</p>\n        </div>\n        <div\n          className={styles.comments}\n          onClick={() => {\n            setViewAllComments(!viewAllComments);\n          }}\n        >\n          {comments[0] &&\n            `View all ${data.commentsNumber + commentsNumberPlus} comments`}\n        </div>\n\n        {viewAllComments\n          ? comments.map((item: any, index: number) => {\n              return (\n                <div className={styles.commentName}>\n                  {item.username}&nbsp;\n                  <p className={styles.commentContent}>{item.message}</p>\n                </div>\n              );\n            })\n          : comments.map((item: any, index: number) => {\n              if (index < 5) {\n                return (\n                  <div className={styles.commentName}>\n                    {item.username}&nbsp;\n                    <p className={styles.commentContent}>{item.message}</p>\n                  </div>\n                );\n              }\n            })}\n\n        <div className={styles.timeAgo}>{moment(data.createdAt).fromNow()}</div>\n        <CartPost\n          postInfo={{ name: data.username, obId: data._id }}\n          index={index}\n          width=\"100%\"\n          height=\"56px\"\n          maxWidth=\"614px\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/Logo/index.tsx",["175","176"],"import React from \"react\";\nimport styles from \"./Logo.module.scss\";\nimport logo from \"../../assets/images/components/Logo/logo.webp\";\n\ninterface logo {\n  width: string;\n  height: string;\n}\n\nconst Logo = ({ width, height }: logo) => {\n  return (\n    <img\n      onDragStart={(e) => {\n        e.preventDefault();\n      }}\n      width={width}\n      height={height}\n      src={logo}\n      loading=\"lazy\"\n      className={styles.logo}\n    />\n  );\n};\n\nexport default Logo;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/CartHeader/index.tsx",["177","178"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport Avatar from \"../Avatar\";\nimport Modal from \"../Modal\";\nimport Spinner from \"../Spinner\";\nimport styles from \"./CartHeader.module.scss\";\n\ninterface cartHeader {\n  pageName: string;\n  height: string;\n  width: string;\n  username: string;\n  obId: string;\n  maxWidth?: string;\n}\n\nconst CartHeader = ({\n  pageName,\n  height,\n  width,\n  username,\n  obId,\n  maxWidth,\n}: cartHeader) => {\n  const [followBool, setFollowBool] = React.useState<boolean>(true);\n  const [visibleModal, setVisibleModal] = React.useState<boolean>();\n  const [postAdmin, setPostAdmin] = React.useState<boolean>(true);\n  const [modalLoading, setModalLoading] = React.useState<boolean>(true);\n\n  const toggleFollow = async () => {\n    const req = postData(`${API_URL}/api/auth/toggleFollow`, {\n      usernamePost: username,\n    });\n    const res = await req;\n    return res?.data?.data ? setFollowBool(!followBool) : void 0;\n  };\n\n  const checkFollow = async () => {\n    const req = postData(`${API_URL}/api/auth/checkFollow`, {\n      usernamePost: username,\n    });\n    const res = await req;\n    return res?.data?.data ? setFollowBool(true) : setFollowBool(false);\n  };\n\n  const checkPostAdmin = async () => {\n    const req = postData(`${API_URL}/api/posts/checkPostAdmin`, {\n      postID: obId,\n    });\n    const res = await req;\n    const resUnpromise = await res;\n    setModalLoading(false);\n    return resUnpromise?.data?.success\n      ? setPostAdmin(true)\n      : setPostAdmin(false);\n  };\n\n  const deletePost = async () => {\n    const req = postData(`${API_URL}/api/posts/deletePost`, {\n      id: obId,\n    });\n    const res = await req;\n    return res.data.success\n      ? (window.location.href = window.location.href)\n      : alert(\"Oops. Try again!\");\n  };\n\n  const dotsClick = () => {\n    setVisibleModal(true);\n    setModalLoading(true);\n    checkPostAdmin();\n  };\n\n  React.useEffect(() => {\n    checkFollow();\n    checkPostAdmin();\n  }, []);\n  return (\n    <div\n      style={{ height: height, width: width, maxWidth: maxWidth }}\n      className={styles.container}\n    >\n      <div className={styles.pageName}>\n        <Avatar\n          width={32}\n          height={32}\n          border\n          borderWidth={46}\n          borderHeight={46}\n        />\n        <Link to={`/profiles/${pageName}`}>{pageName}</Link>\n        {!followBool && !postAdmin ? (\n          <span>\n            &nbsp;&bull;&nbsp;\n            <span\n              className={styles.followLink}\n              onClick={() => {\n                toggleFollow();\n              }}\n            >\n              Follow\n            </span>\n          </span>\n        ) : (\n          void 0\n        )}\n      </div>\n      <p onClick={dotsClick} className={styles.dots}>\n        &bull;&bull;&bull;\n      </p>\n\n      <Modal\n        width=\"400px\"\n        height=\"auto\"\n        visible={visibleModal}\n        onClose={() => {\n          setVisibleModal(false);\n        }}\n      >\n        {modalLoading ? (\n          <Spinner\n            width=\"100%\"\n            height=\"100%\"\n            spinnerWidth=\"25px\"\n            spinnerHeight=\"25px\"\n          />\n        ) : postAdmin ? (\n          <ul className={styles.dotsModalContainer}>\n            <li className={styles.delete} onClick={deletePost}>\n              Delete\n            </li>\n            <li\n              className={styles.close}\n              onClick={() => {\n                setVisibleModal(false);\n              }}\n            >\n              Close\n            </li>\n          </ul>\n        ) : (\n          <ul className={styles.dotsModalContainer}>\n            <li\n              className={styles.close}\n              onClick={() => {\n                setVisibleModal(false);\n              }}\n            >\n              Close\n            </li>\n          </ul>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CartHeader;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/components/CartPost/index.tsx",["179"],"import React, { useState } from \"react\";\nimport { postData } from \"../../utils/API\";\nimport { API_URL } from \"../../utils/API_SETTINGS\";\nimport styles from \"./CartPost.module.scss\";\nimport { postCommentTrigger as PCT } from \"../../store/atom\";\nimport { useRecoilState } from \"recoil\";\n\ninterface cartpost {\n  width: string;\n  height: string;\n  index: number;\n  postInfo: { name: string; obId: string };\n  maxWidth?: string;\n}\n\nconst CartPost = ({ width, height, index, postInfo, maxWidth }: cartpost) => {\n  const [textValue, setTextValue] = useState(\"\");\n  const [postCommentTrigger, setPostCommentTrigger] = useRecoilState(PCT);\n  const textareaChecker = () => {\n    const taElement = document.getElementsByClassName(\n      `cardPostTextarea${index}`\n    )[0];\n    const taElementId = document.getElementById(\n      `cardPostTextarea${index}`\n    ) as HTMLTextAreaElement;\n    const cartPostElement = document.getElementById(\n      `cartPostContainer${index}`\n    ) as HTMLDivElement;\n    if (\n      taElement.scrollHeight > 22 &&\n      taElementId.scrollHeight < 90 &&\n      taElementId.textLength > 79\n    ) {\n      taElementId.style.height = \"auto\";\n      taElementId.style.height = `${taElement.scrollHeight}px`;\n      cartPostElement.style.height = `${taElement.scrollHeight}px`;\n    } else if (taElementId.textLength < 79) {\n      cartPostElement.style.height = \"58px\";\n      taElementId.style.height = `18px`;\n    }\n  };\n\n  const addComment = async () => {\n    if (textValue.length >= 10) {\n      let req = postData(\n        `${API_URL}/api/posts/addComment`,\n        JSON.stringify({\n          obId: postInfo.obId,\n          message: textValue,\n        })\n      );\n\n      let res = await req;\n      if (res.data.success) {\n        setTextValue(\"\");\n        setPostCommentTrigger({\n          id: postInfo.obId,\n          username: postInfo.name,\n          message: textValue,\n        });\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: width,\n        height: height,\n        minHeight: height,\n        maxWidth: maxWidth,\n      }}\n      id={`cartPostContainer${index}`}\n      className={styles.container}\n    >\n      <textarea\n        onKeyPress={() => {\n          textareaChecker();\n        }}\n        placeholder=\"Add a comment...\"\n        style={{\n          height: \"18px\",\n        }}\n        value={textValue}\n        onChange={(e) => setTextValue(e.target.value)}\n        id={`cardPostTextarea${index}`}\n        className={`cardPostTextarea${index}`}\n      ></textarea>\n      <button\n        disabled={textValue.length < 10 ? true : false}\n        onClick={addComment}\n      >\n        Post\n      </button>\n    </div>\n  );\n};\n\nexport default CartPost;\n","/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Home.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/icons/Explore.tsx",[],"/home/david/Project/Sync/Duviebook/Instagram-Fullstack-Clone-Mern/client/src/assets/images/global/Spinner.tsx",[],["180","181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":24},{"ruleId":"186","severity":1,"message":"190","line":19,"column":10,"nodeType":"188","messageId":"189","endLine":19,"endColumn":21},{"ruleId":"186","severity":1,"message":"191","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":52,"column":6,"nodeType":"194","endLine":52,"endColumn":8,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":60,"column":6,"nodeType":"194","endLine":60,"endColumn":21,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":85,"column":17,"nodeType":"200","endLine":85,"endColumn":52},{"ruleId":"192","severity":1,"message":"201","line":82,"column":6,"nodeType":"194","endLine":82,"endColumn":8,"suggestions":"202"},{"ruleId":"192","severity":1,"message":"203","line":90,"column":6,"nodeType":"194","endLine":90,"endColumn":32,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":110,"column":15,"nodeType":"200","endLine":110,"endColumn":75},{"ruleId":"205","severity":1,"message":"206","line":132,"column":33,"nodeType":"200","endLine":132,"endColumn":78},{"ruleId":"205","severity":1,"message":"206","line":155,"column":15,"nodeType":"200","endLine":155,"endColumn":79},{"ruleId":"205","severity":1,"message":"206","line":178,"column":15,"nodeType":"200","endLine":178,"endColumn":60},{"ruleId":"192","severity":1,"message":"207","line":24,"column":6,"nodeType":"194","endLine":24,"endColumn":8,"suggestions":"208"},{"ruleId":"192","severity":1,"message":"209","line":69,"column":6,"nodeType":"194","endLine":69,"endColumn":8,"suggestions":"210"},{"ruleId":"192","severity":1,"message":"211","line":75,"column":6,"nodeType":"194","endLine":75,"endColumn":25,"suggestions":"212"},{"ruleId":"192","severity":1,"message":"209","line":29,"column":6,"nodeType":"194","endLine":29,"endColumn":8,"suggestions":"213"},{"ruleId":"186","severity":1,"message":"191","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"214","line":1,"column":28,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"215","line":26,"column":30,"nodeType":"188","messageId":"189","endLine":26,"endColumn":51},{"ruleId":"186","severity":1,"message":"216","line":27,"column":10,"nodeType":"188","messageId":"189","endLine":27,"endColumn":13},{"ruleId":"192","severity":1,"message":"217","line":52,"column":6,"nodeType":"194","endLine":52,"endColumn":26,"suggestions":"218"},{"ruleId":"198","severity":1,"message":"199","line":82,"column":9,"nodeType":"200","endLine":88,"endColumn":11},{"ruleId":"219","severity":1,"message":"220","line":130,"column":53,"nodeType":"221","messageId":"222","endLine":130,"endColumn":55},{"ruleId":"223","severity":1,"message":"224","line":5,"column":11,"nodeType":"188","messageId":"225","endLine":5,"endColumn":15},{"ruleId":"205","severity":1,"message":"206","line":12,"column":5,"nodeType":"200","endLine":21,"endColumn":7},{"ruleId":"226","severity":1,"message":"227","line":66,"column":33,"nodeType":"228","messageId":"229","endLine":66,"endColumn":53},{"ruleId":"192","severity":1,"message":"230","line":79,"column":6,"nodeType":"194","endLine":79,"endColumn":8,"suggestions":"231"},{"ruleId":"186","severity":1,"message":"232","line":18,"column":10,"nodeType":"188","messageId":"189","endLine":18,"endColumn":28},{"ruleId":"182","replacedBy":"233"},{"ruleId":"184","replacedBy":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"@typescript-eslint/no-unused-vars","'AuthRouteDefault' is defined but never used.","Identifier","unusedVar","'loadingUser' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'link' and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["237"],"React Hook useEffect has a missing dependency: 'onAddComment'. Either include it or remove the dependency array.",["238"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'checkFollow', 'getUser', 'getUserPosts', and 'getUserProfile'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has missing dependencies: 'checkFollow', 'getUser', 'getUserPosts', and 'getUserProfile'. Either include them or remove the dependency array. Outer scope values like 'window.location.pathname' aren't valid dependencies because mutating them doesn't re-render the component.",["240"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'link', 'noAuth', and 'onAuth'. Either include them or remove the dependency array.",["241"],"React Hook React.useEffect has a missing dependency: 'props.obId'. Either include it or remove the dependency array.",["242"],"React Hook React.useEffect has missing dependencies: 'props.obId' and 'toggleHearthColor'. Either include them or remove the dependency array.",["243"],["244"],"'useState' is defined but never used.","'setPostCommentTrigger' is assigned a value but never used.","'pct' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comments', 'commentsNumberPlus', and 'data._id'. Either include them or remove the dependency array. You can also do a functional update 'setCommentsNumberPlus(c => ...)' if you only need 'commentsNumberPlus' in the 'setCommentsNumberPlus' call.",["245"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-redeclare","'logo' is already defined.","redeclared","no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","React Hook React.useEffect has missing dependencies: 'checkFollow' and 'checkPostAdmin'. Either include them or remove the dependency array.",["246"],"'postCommentTrigger' is assigned a value but never used.",["235"],["236"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"256","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [link, location.pathname]",{"range":"265","text":"266"},"Update the dependencies array to be: [onAddComment, onPostComment]",{"range":"267","text":"268"},"Update the dependencies array to be: [checkFollow, getUser, getUserPosts, getUserProfile]",{"range":"269","text":"270"},{"range":"271","text":"270"},"Update the dependencies array to be: [link, noAuth, onAuth]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.obId]",{"range":"274","text":"275"},"Update the dependencies array to be: [photoClickTrigger, props.obId, toggleHearthColor]",{"range":"276","text":"277"},{"range":"278","text":"275"},"Update the dependencies array to be: [comments, commentsNumberPlus, data._id, postCommentTrigger]",{"range":"279","text":"280"},"Update the dependencies array to be: [checkFollow, checkPostAdmin]",{"range":"281","text":"282"},[1959,1961],"[link, location.pathname]",[2149,2164],"[onAddComment, onPostComment]",[2587,2589],"[checkFollow, getUser, getUserPosts, getUserProfile]",[2716,2742],[676,678],"[link, noAuth, onAuth]",[2206,2208],"[props.obId]",[2334,2353],"[photoClickTrigger, props.obId, toggleHearthColor]",[885,887],[1848,1868],"[comments, commentsNumberPlus, data._id, postCommentTrigger]",[2087,2089],"[checkFollow, checkPostAdmin]"]